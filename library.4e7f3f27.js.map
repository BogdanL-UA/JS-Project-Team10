{"mappings":"imBAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAsBC,GAC1BC,KAAKC,MAAMC,aAAaC,QAAQ,GAAGJ,YAErC,IAAIK,EAAgBN,EAAoB,WACpCO,EAAcP,EAAoB,SAEtC,MAAMQ,EAAwB,KAC5BC,EAAAC,KAAKC,QAAQC,UAAY,EAAE,EAGvBC,EAAqB,KACzBJ,EAAAC,KAAKI,iBAAiBC,UAAUC,IAAI,8BAA8B,EAepC,GACZ,MAAjBV,GAAkD,IAAzBA,EAAcW,QACxB,MAAfV,GAA8C,IAAvBA,EAAYU,OAK/B,IAAIX,EAAcW,OAAS,EAMhC,OAHAT,IACAK,SACA,EAAAf,EAAAoB,eAAcZ,GAET,GAAIC,EAAYU,OAAS,EAM9B,OAHAT,IA7BAC,EAAAC,KAAKS,eAAeJ,UAAUC,IAAI,oCA+BlC,EAAAlB,EAAAoB,eAAcX,E,MAdFC,IACZC,EAAAC,KAAKU,QAAQR,UAAY,6C,0FCnC3B,IAAAS,EAAAtB,EAAA,S,0BAIA,MAeMuB,EAAyB,EAACC,GAC9BA,EAAEC,YACFA,EAAWC,MACXA,EAAKC,OACLA,EAAMC,aACNA,EAAYC,aACZA,MAEAC,SAASC,iBAAiB,QAASC,EAAAC,SACnC,MAAMC,EAxBqB,CAAAP,GACvBA,EAAOT,OAAS,EACXS,EAAOQ,KAAIC,GAASA,EAAMC,OAAMC,KAAK,MACjB,IAAlBX,EAAOT,OACT,YACES,EAAOT,OAAS,EAEvBS,EACGQ,KAAIC,GAASA,EAAMC,OACnBE,MAAM,EAAG,GACTD,KAAK,MAAQ,eALb,EAmBYE,CAAqBb,GACxC,MAAO,4CACgCH,4GAEkBC,WAAqBC,6KAGjBA,yHAEZQ,+DACDN,EAAaW,MACzC,EACA,8DAE4BE,OAAOZ,GAAcU,MACjD,EACA,wDAIjB,EAGCG,EAAkB,IAAI,EAAApB,EAAAqB,iBAE5B,SAASC,EAAcC,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAO3B,OAAQ4B,GAAK,EACtCJ,EAAgBK,aAAaF,EAAOC,IAAIE,MAAKC,IAC3CvC,EAAAC,KAAKC,QAAQsC,mBACX,YACA3B,EAAuB0B,GACxB,G,kFC3DA,MAAME,EAAO,CAChBvC,QAASkB,SAASsB,cAAc,kBAChC/B,QAASS,SAASsB,cAAc,YAChCrC,iBAAkBe,SAASsB,cAAc,gCACzChC,eAAgBU,SAASsB,cAAc,8B,ICF3CpD,EAAA,S","sources":["src/js/library/on-library-load.js","src/js/library/render-library.js","src/js/library/library-refs.js","src/index-library.js"],"sourcesContent":["import { renderLibrary } from './render-library';\nimport { refs } from './library-refs';\n\nconst getFromLocalStorage = key =>\n  JSON.parse(localStorage.getItem(`${key}Movies`));\n\nlet watchedMovies = getFromLocalStorage('watched');\nlet queueMovies = getFromLocalStorage('queue');\n\nconst clearLibraryContainer = () => {\n  refs.library.innerHTML = '';\n};\n\nconst activateWatchedBtn = () => {\n  refs.headerWatchedBtn.classList.add('library-header__btn--active');\n};\nconst activateQueueBtn = () => {\n  refs.headerQueueBtn.classList.add('library-header__btn--active');\n};\n\nconst deactivateWatchedBtn = () => {\n  refs.headerWatchedBtn.classList.remove('library-header__btn--active');\n};\n\nconst deactivateQueueBtn = () => {\n  refs.headerQueueBtn.classList.remove('library-header__btn--active');\n};\n\n//перевірка localstorage при завантаженні сторінки\nif (\n  (watchedMovies == null || watchedMovies.length === 0) &&\n  (queueMovies == null || queueMovies.length === 0)\n) {\n  //в localstorage нічого немає\n  clearLibraryContainer();\n  refs.message.innerHTML = '<p>Ви ще не додали фільми до бібліотеки</p>';\n} else if (watchedMovies.length > 0) {\n  //в localstorage є переглянуті фільми (пріоритет)\n  // console.log(watchedMovies);\n  clearLibraryContainer();\n  activateWatchedBtn();\n  renderLibrary(watchedMovies);\n  return;\n} else if (queueMovies.length > 0) {\n  //в localstorage є фільми в черзі\n  // console.log(queueMovies);\n  clearLibraryContainer();\n  activateQueueBtn();\n  renderLibrary(queueMovies);\n  return;\n}\n\n//колбеки для кнопок\nconst onWatchedBtnClick = event => {\n  event.preventDefault();\n\n  deactivateQueueBtn();\n  activateWatchedBtn();\n\n  clearLibraryContainer();\n\n  if (watchedMovies == null || watchedMovies.length === 0) {\n    refs.message.innerHTML =\n      '<p>Ви ще не додали фільми до списку переглянутих</p>';\n  } else if (watchedMovies.length > 0) {\n    refs.message.innerHTML = '';\n    renderLibrary(watchedMovies);\n  }\n};\n\n//додаємо прослуховувачі подій на кнопки\n// refs.headerWatchedBtn.addEventListener('click', onWatchedBtnClick);\n","import { FilmsApiService } from '../api-service';\nimport { refs } from './library-refs';\nimport openMovieModal from '../open-movie-modal';\n\nconst generateGenresString = genres => {\n  if (genres.length < 2) {\n    return genres.map(genre => genre.name).join(', ');\n  } else if (genres.length === 0) {\n    return 'no genres';\n  } else if (genres.length > 2) {\n    return (\n      genres\n        .map(genre => genre.name)\n        .slice(0, 2)\n        .join(', ') + ', Other'\n    );\n  }\n};\n\nconst createLibraryMovieItem = ({\n  id,\n  poster_path,\n  title,\n  genres,\n  release_date,\n  vote_average,\n}) => {\n  document.addEventListener('click', openMovieModal);\n  const genresList = generateGenresString(genres);\n  return `\n    <li class=\"library__item\" data-id=\"${id}\">\n            <div class=\"library__poster\">\n                <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${title}\" class=\"library__image\" data-target=\"card\"/>\n            </div>\n            <div class=\"library__meta\">\n                <p class=\"library__title\" data-target=\"card\">${title}</p>\n                <p class=\"library__info\" data-target=\"card\">\n                    <span class=\"library__genre\">${genresList}</span> |\n                    <span class=\"library__year\">${release_date.slice(\n                      0,\n                      4\n                    )}</span>\n                    <span class=\"library__rate\">${String(vote_average).slice(\n                      0,\n                      3\n                    )}</span></p>\n            </div>\n        </li>\n    `;\n};\n\nconst filmsApiService = new FilmsApiService();\n\nfunction renderLibrary(movies) {\n  for (let i = 0; i < movies.length; i += 1)\n    filmsApiService.getFilmsById(movies[i]).then(response => {\n      refs.library.insertAdjacentHTML(\n        'beforeend',\n        createLibraryMovieItem(response)\n      );\n    });\n}\n\nexport { renderLibrary };\n","export const refs = {\n    library: document.querySelector('.library__list'),\n    message: document.querySelector('.message'),\n    headerWatchedBtn: document.querySelector('.library-header__watched-btn'),\n    headerQueueBtn: document.querySelector('.library-header__queue-btn'),\n}","// import './js/create-page-home';\n// import './js/create-search-gallery';\nimport './js/open-movie-modal';\nimport './js/pagination';\nimport './js/library/on-library-load';\nimport './js/team-modal';\nimport './js/dark-theme';\n// import './js/scroll';\nimport topUp from './js/top';\n\n// topUp();\n"],"names":["$8VoSq","parcelRequire","getFromLocalStorage","key","JSON","parse","localStorage","getItem","watchedMovies","queueMovies","clearLibraryContainer","$33qOe","refs","library","innerHTML","activateWatchedBtn","headerWatchedBtn","classList","add","length","renderLibrary","headerQueueBtn","message","$7me8F","$01ad45f64448961d$var$createLibraryMovieItem","id","poster_path","title","genres","release_date","vote_average","document","addEventListener","$lDsUW","default","genresList","map","genre","name","join","slice","$01ad45f64448961d$var$generateGenresString","String","$01ad45f64448961d$var$filmsApiService","FilmsApiService","$01ad45f64448961d$export$e7d1a4959038c5e5","movies","i","getFilmsById","then","response","insertAdjacentHTML","$239672a77ee04190$export$21666b427502ea6d","querySelector"],"version":3,"file":"library.4e7f3f27.js.map"}